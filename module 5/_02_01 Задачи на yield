### Задача 1

Необходимо определить функцию-генератор, которая бы выдавала пароль длиной N символов из случайных букв, цифр и некоторых других знаков. 

Для получения последовательности допустимых символов для генерации паролей в программе импортированы две строки: 

```python
ascii_lowercase, ascii_uppercase 
# на основе которых формируется общий список:

from string import ascii_lowercase, ascii_uppercase
chars = ascii_lowercase + ascii_uppercase + "0123456789!?@#$*"

```

Функция-генератор должна при каждом вызове возвращать новый пароль из случайно выбранных символов chars длиной N и делать это бесконечно, то есть, вызывать ее можно бесконечное число раз. 

Сгенерируйте с помощью этой функции первые пять паролей и выведите их в столбик (каждый с новой строки).

```
riGp?58WAm
!dX3a5IDnO
dcdbWB2d*C
4?DSDC6Lc1
mxLpQ@2@yM
```


### Задача 2
задайте функцию-генератор, которая бы возвращала случайно сформированные email-адреса с доменом mail.ru и длиной в N символов, используя буквы из ascii_lowercase и ascii_uppercase

Например, при N=6, получим адрес: SCrUZo@mail.ru

Функция-генератор должна возвращать бесконечное число таких адресов, то есть, генерировать постоянно. 

Выведите первые пять сгенерированных email и выведите их в столбик (каждый с новой строки).

> Ввод - 8

> Вывод:
```
ESZYCIDP@mail.ru
YOPUMZGD@mail.ru
PAMNTYYA@mail.ru
WOIXZHSD@mail.ru
KAAAURAM@mail.ru
```


### Задача 3 Теорема Вильсона

Теорема теории чисел, которая утверждает, что p — простое число тогда и только тогда, когда (p − 1)! + 1 делится на p

```python
def prime(n):
    if (math.factorial(n-1)+1) % n!=0:
        print ("Это составное число")
    else:
        print ("Это простое число")
```


```python
def primFerma(a,n):
    if a**(n-1)%n==1:
        print "правдоподобно простое"
    else:
        print "составное"
```